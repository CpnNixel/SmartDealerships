// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SmartDealerships.DataAccess.PSQL;

#nullable disable

namespace SmartDealerships.DataAccess.Migrations
{
    [DbContext(typeof(DealershipDbContext))]
    [Migration("20220622052908_AddedImageLinkToProduct")]
    partial class AddedImageLinkToProduct
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("OrderDetailsProduct", b =>
                {
                    b.Property<int>("OrdersId")
                        .HasColumnType("integer");

                    b.Property<int>("ProductsId")
                        .HasColumnType("integer");

                    b.HasKey("OrdersId", "ProductsId");

                    b.HasIndex("ProductsId");

                    b.ToTable("OrderDetailsProduct");
                });

            modelBuilder.Entity("SmartDealerships.DataAccess.Models.CartItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<int?>("ProductId")
                        .HasColumnType("integer");

                    b.Property<int>("Qty")
                        .HasColumnType("integer");

                    b.Property<int?>("ShoppingSessionId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("ShoppingSessionId");

                    b.ToTable("CartItems");
                });

            modelBuilder.Entity("SmartDealerships.DataAccess.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Spare parts"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Fuel filtes"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Battery"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Brake pads"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Brake rotor"
                        });
                });

            modelBuilder.Entity("SmartDealerships.DataAccess.Models.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<byte[]>("LogoImage")
                        .HasColumnType("bytea");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "",
                            Name = "Truck shop"
                        });
                });

            modelBuilder.Entity("SmartDealerships.DataAccess.Models.OrderDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("CompanyId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("Total")
                        .HasColumnType("numeric");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("UserId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("SmartDealerships.DataAccess.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<int>("CompanyId")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("ImageLink")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<string>("Sku")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CompanyId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 4,
                            CompanyId = 1,
                            Description = "Brakes squealing? Are you experiencing longer stopping distances? Get reliable, everyday performance for regular driving needs from Duralast brake pads, designed to meet your vehicles original equipment for form, fit, and function. Available only at AutoZone, Duralast brake pads use platform-specific, semi-metallic friction materials tailored to your vehicle. Replace rotors and hardware when replacing brake pads for better performance and less noise.",
                            ImageLink = "https://db73q1dut0rlp.cloudfront.net/eyJ3aWR0aCI6NDM1LCJoZWlnaHQiOjQzNSwiZml0IjoiY29udGFpbiIsIndhdGVybWFya2VkIjp0cnVlLCJmb3JtYXQiOiJ3ZWJwIiwia2V5IjoiYXNzZXRzL2ltYWdlcy8xMDQ4NzU2NS9wcm9kdWN0LzU3ZGM5ZGY4Y2E4NTJhZGQ3NTZkOWU4Njg5NmFlZWEyLmpwZyIsInZlcnNpb24iOjJ9.webp?s=f17c9f283b640e18c3ccad87a5897582e9c42a0198361b93ce344dbc66d9f67a",
                            Name = "Duralast Ceramic Brake Pads",
                            Price = 300.5m,
                            Sku = "MKD503"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 4,
                            CompanyId = 1,
                            Description = "Brakes squealing? Are you experiencing longer stopping distances? Get reliable, everyday performance for regular driving needs from Duralast brake pads, designed to meet your vehicles original equipment for form, fit, and function. Available only at AutoZone, Duralast brake pads use platform-specific, semi-metallic friction materials tailored to your vehicle. Replace rotors and hardware when replacing brake pads for better performance and less noise.",
                            ImageLink = "https://db73q1dut0rlp.cloudfront.net/eyJ3aWR0aCI6NDM1LCJoZWlnaHQiOjQzNSwiZml0IjoiY29udGFpbiIsIndhdGVybWFya2VkIjp0cnVlLCJmb3JtYXQiOiJ3ZWJwIiwia2V5IjoiYXNzZXRzL2ltYWdlcy83Njc5MjEwL3Byb2R1Y3QvYjEwZTdhOTJiMjU2N2YwNjkxODllOGQwMDY1ZDZmZTIuanBnIiwidmVyc2lvbiI6Mn0=.webp?s=d99aa90b79e4f9fe43889b808046b776d1bfc3cbacf7f12259179419df90d73b",
                            Name = "Duralast Ceramic Brake Pads D924",
                            Price = 36.99m,
                            Sku = "D924"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 4,
                            CompanyId = 1,
                            Description = "Brakes squealing? Are you experiencing longer stopping distances? Get reliable, everyday performance for regular driving needs from Duralast brake pads, designed to meet your vehicles original equipment for form, fit, and function. Available only at AutoZone, Duralast brake pads use platform-specific, semi-metallic friction materials tailored to your vehicle. Replace rotors and hardware when replacing brake pads for better performance and less noise.",
                            ImageLink = "https://db73q1dut0rlp.cloudfront.net/eyJ3aWR0aCI6NDM1LCJoZWlnaHQiOjQzNSwiZml0IjoiY29udGFpbiIsIndhdGVybWFya2VkIjp0cnVlLCJmb3JtYXQiOiJ3ZWJwIiwia2V5IjoiYXNzZXRzL2ltYWdlcy8xMDQ4NzU2NS9wcm9kdWN0LzU3ZGM5ZGY4Y2E4NTJhZGQ3NTZkOWU4Njg5NmFlZWEyLmpwZyIsInZlcnNpb24iOjJ9.webp?s=f17c9f283b640e18c3ccad87a5897582e9c42a0198361b93ce344dbc66d9f67a",
                            Name = "Duralast Ceramic Brake Pads D1339",
                            Price = 44.49m,
                            Sku = "D1339"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 5,
                            CompanyId = 1,
                            Description = "Engineered to properly remove heat from the brake system,OE compliance for equal or better rotor performance, reduced pulsation, and noise.",
                            ImageLink = "https://db73q1dut0rlp.cloudfront.net/eyJ3aWR0aCI6NDM1LCJoZWlnaHQiOjQzNSwiZml0IjoiY29udGFpbiIsIndhdGVybWFya2VkIjp0cnVlLCJmb3JtYXQiOiJ3ZWJwIiwia2V5IjoiYXNzZXRzL2ltYWdlcy84MjQyNzA1L3Byb2R1Y3QvMDZlZWJkODRlZDc1NzIxZjg5MzEwYTYzNTdkMDUyNzcuanBnIiwidmVyc2lvbiI6Mn0=.webp?s=620cd67494495e3dbf662fea5641d783ec6103b4643a04ba2c20fce0c32b0e10",
                            Name = "Duralast Brake Rotor 31069",
                            Price = 59.99m,
                            Sku = "31069"
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 5,
                            CompanyId = 1,
                            Description = "Engineered to properly remove heat from the brake system,OE compliance for equal or better rotor performance, reduced pulsation, and noise.",
                            ImageLink = "https://db73q1dut0rlp.cloudfront.net/eyJ3aWR0aCI6NDM1LCJoZWlnaHQiOjQzNSwiZml0IjoiY29udGFpbiIsIndhdGVybWFya2VkIjp0cnVlLCJrZXkiOiJhc3NldHMvaW1hZ2VzLzM5ODA0NDQvcHJvZHVjdC9hMDdmNDkwNGNmODI0MTU5NTM3MjY0ZTM5NTdhNDk0Yi5qcGciLCJ2ZXJzaW9uIjoyfQ==.jpg?s=27ac4792d15bef3fd6a03c9c9aa319c4c3d0dac75115c8e3b8e856ac01a26722",
                            Name = "Duralast Brake Rotor 55097",
                            Price = 89.99m,
                            Sku = "55097"
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 5,
                            CompanyId = 1,
                            Description = "Engineered to properly remove heat from the brake system,OE compliance for equal or better rotor performance, reduced pulsation, and noise.",
                            ImageLink = "https://db73q1dut0rlp.cloudfront.net/eyJ3aWR0aCI6NDM1LCJoZWlnaHQiOjQzNSwiZml0IjoiY29udGFpbiIsIndhdGVybWFya2VkIjp0cnVlLCJmb3JtYXQiOiJ3ZWJwIiwia2V5IjoiYXNzZXRzL2ltYWdlcy8zNjUxMDgwL3Byb2R1Y3QvZjRjZjQwZjMwYTQxYjBjN2U4MzdlZDk2OTMzNzk4OWMuanBnIiwidmVyc2lvbiI6Mn0=.webp?s=90276857837de2b16a45fc0deba9678c4d427c8f82ceab6d987b583aac03b0e9",
                            Name = "Duralast Brake Rotor 55072DL",
                            Price = 79.99m,
                            Sku = "55072DL"
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 5,
                            CompanyId = 1,
                            Description = "Duralast® brand disc brake rotors are designed and engineered to match J431 and your vehicles original equipment performance. Our Duralast® rotors can replace your OE parts with no change in performance and safety. So when you need a part you can trust at a price you can afford.",
                            ImageLink = "https://contentinfo.autozone.com/znetcs/product-info/en/US/aim/72213DL/image/10/",
                            Name = "Duralast Brake Rotor 5333",
                            Price = 97.99m,
                            Sku = "55072DL"
                        });
                });

            modelBuilder.Entity("SmartDealerships.DataAccess.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            RoleName = "User"
                        },
                        new
                        {
                            Id = 2,
                            RoleName = "Admin"
                        });
                });

            modelBuilder.Entity("SmartDealerships.DataAccess.Models.ShoppingSession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Total")
                        .HasColumnType("numeric");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("ShoppingSessions");
                });

            modelBuilder.Entity("SmartDealerships.DataAccess.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.Property<int?>("ShoppingSessionId")
                        .HasColumnType("integer");

                    b.Property<string>("Telephone")
                        .HasMaxLength(13)
                        .HasColumnType("character varying(13)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("RoleId");

                    b.HasIndex("ShoppingSessionId")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Kharkiv city, Buchmy 50",
                            CompanyId = 1,
                            CreatedAt = new DateTime(2022, 6, 22, 8, 29, 7, 908, DateTimeKind.Utc).AddTicks(7493),
                            Email = "john.doe@gmail.com",
                            FirstName = "John",
                            LastName = "Doe",
                            ModifiedAt = new DateTime(2022, 6, 22, 8, 29, 7, 908, DateTimeKind.Utc).AddTicks(7526),
                            PasswordHash = "$2a$11$HJsqUEsh/lebuPE34xZ9N.Ve//.OXx.9UA3Rk5ZIlO.McASOIWzRO",
                            RoleId = 1,
                            Telephone = "380662016"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Pervomaiskiy",
                            CompanyId = 1,
                            CreatedAt = new DateTime(2022, 6, 22, 8, 29, 7, 908, DateTimeKind.Utc).AddTicks(7531),
                            Email = "mykyta.kysil@nure.ua",
                            FirstName = "Mykyta",
                            LastName = "Kysil",
                            ModifiedAt = new DateTime(2022, 6, 22, 8, 29, 7, 908, DateTimeKind.Utc).AddTicks(7533),
                            PasswordHash = "$2a$11$RY9/Od/PHd5IyNWy6lBiYe1nXSVATRNCBpG4NDfIsneT7lNHj75G2",
                            RoleId = 2,
                            Telephone = "0662016521"
                        });
                });

            modelBuilder.Entity("OrderDetailsProduct", b =>
                {
                    b.HasOne("SmartDealerships.DataAccess.Models.OrderDetails", null)
                        .WithMany()
                        .HasForeignKey("OrdersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartDealerships.DataAccess.Models.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmartDealerships.DataAccess.Models.CartItem", b =>
                {
                    b.HasOne("SmartDealerships.DataAccess.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");

                    b.HasOne("SmartDealerships.DataAccess.Models.ShoppingSession", "ShoppingSession")
                        .WithMany("CartItems")
                        .HasForeignKey("ShoppingSessionId");

                    b.Navigation("Product");

                    b.Navigation("ShoppingSession");
                });

            modelBuilder.Entity("SmartDealerships.DataAccess.Models.OrderDetails", b =>
                {
                    b.HasOne("SmartDealerships.DataAccess.Models.Company", "SellingCompany")
                        .WithMany()
                        .HasForeignKey("CompanyId");

                    b.HasOne("SmartDealerships.DataAccess.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("SellingCompany");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SmartDealerships.DataAccess.Models.Product", b =>
                {
                    b.HasOne("SmartDealerships.DataAccess.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId");

                    b.HasOne("SmartDealerships.DataAccess.Models.Company", "Company")
                        .WithMany("Products")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("SmartDealerships.DataAccess.Models.User", b =>
                {
                    b.HasOne("SmartDealerships.DataAccess.Models.Company", "Company")
                        .WithMany("Owners")
                        .HasForeignKey("CompanyId");

                    b.HasOne("SmartDealerships.DataAccess.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartDealerships.DataAccess.Models.ShoppingSession", "ShoppingSession")
                        .WithOne("User")
                        .HasForeignKey("SmartDealerships.DataAccess.Models.User", "ShoppingSessionId");

                    b.Navigation("Company");

                    b.Navigation("Role");

                    b.Navigation("ShoppingSession");
                });

            modelBuilder.Entity("SmartDealerships.DataAccess.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("SmartDealerships.DataAccess.Models.Company", b =>
                {
                    b.Navigation("Owners");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("SmartDealerships.DataAccess.Models.ShoppingSession", b =>
                {
                    b.Navigation("CartItems");

                    b.Navigation("User")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
